[{"title":"The Action and Operation approach","category":"guides","link":"https:\/\/ollieread.com\/archive\/read\/the-action-and-operation-approach","snippet":"For a long time, I followed the approach of creating controllers and repositories for individual entities (models). While this approach works, it slowly started to leave a bad taste in my mouth. After much researching into alternative approaches I was unable to find something that truly fit what I wanted. So I decided to have a go at creating my own."},{"title":"An update on what the future has in store for me and ollieread.com","category":"updates","link":"https:\/\/ollieread.com\/archive\/read\/an-update-on-what-the-future-has-in-store-for-me-and-olliereadcom","snippet":"It has been over a year since I last wrote an article on this site, and my god have things changed since then. Well, I'm back with an update on this site, and a look at what the future has in store."},{"title":"Multitenancy With Laravel, a course and package","category":"updates","link":"https:\/\/ollieread.com\/archive\/read\/multitenancy-with-laravel-a-course-and-package","snippet":"Multitenancy with Laravel is a course and package offering that I've been working on for some time. It covers everything you need to do to get started with multitenancy and Laravel."},{"title":"Creating a modern day PHP framework","category":"personal","link":"https:\/\/ollieread.com\/archive\/read\/creating-a-modern-day-php-framework","snippet":"PHP has come a long way since I started development some 15 years ago, and its frameworks are far from the small MVC framework I created back in 2008 to get my head fully around the concept. A lot of frameworks have fallen behind, unable to keep up with the rapidly changing climate, and those that have kept up with it polarise developers. It's easy to bash a framework, but what does it actually take to build a framework? I'm going to give it ago. "},{"title":"Laravel RBAC (role based access control), without over-engineering","category":"tutorials","link":"https:\/\/ollieread.com\/archive\/read\/laravel-rbac-role-based-access-control-without-over-engineering","snippet":"My one-man quest to stop people over-engineering their code continues, but this time I'll be approaching roles & permissions, commonly referred to as an RBAC."},{"title":"How I accidentally created an ORM to avoid using Eloquent","category":"updates","link":"https:\/\/ollieread.com\/archive\/read\/how-i-accidentally-created-an-orm-to-avoid-using-eloquent","snippet":"In this article, I'm going to go through some of the reasons I stopped using Eloquent, as well as covering the reason for Articulates creation, and the different iterations that I took to make it what it is today."},{"title":"Laravel multi-tenancy, avoiding over engineering","category":"tutorials","link":"https:\/\/ollieread.com\/archive\/read\/laravel-multi-tenancy-avoiding-over-engineering","snippet":"Multi-tenancy seems to be a hot topic at the moment, with many hoping that Laravel Nova was going to solve all of their issues. There are a lot of packages out there that aid you with your multi-tenanted endeavour, but it doesn't have to be that complicated. Honestly."},{"title":"Treating APIs like any other data source","category":"updates","link":"https:\/\/ollieread.com\/archive\/read\/treating-apis-like-any-other-data-source","snippet":"APIs are, after all, another data source, so why not treat them like one?"},{"title":"An alternative to Eloquent, Articulate","category":"updates","link":"https:\/\/ollieread.com\/archive\/read\/an-alternative-to-eloquent-articulate","snippet":"Lately I've found myself getting frustrated with Eloquent, needing more than Laravels default ORM offers. I'm a big fan of the DataMapper pattern, but I become disheartened with the overhead and complexity of Doctrine. My time spent with Java has brought out a love for objects, and absolutely everything being objects. With this in mind, I created myself a super basic lightweight ORM named Articulate."},{"title":"Using Repositories with Laravel","category":"tutorials","link":"https:\/\/ollieread.com\/archive\/read\/using-repositories-with-laravel","snippet":"The repository pattern is one that appears to polarize developers, with half swearing by and half swearing against. It's also something that seems to have been spoken about a lot, though I feel that more often than not, it's an over complicated over engineered approach."},{"title":"Freelance PHP developer, the return!!","category":"personal","link":"https:\/\/ollieread.com\/archive\/read\/freelance-php-developer-return","snippet":"It has only been a year, but I'm making a return to the world of freelancing.\nFor those of you that don't know, I've been working for CleverCherry for the last year (well, a year as of yesterday). It has been a wonderful year and a wonderful experience. I've made some friends along the way and I've thoroughly enjoyed being a part of their team. I handed my notice in some two months ago and my final day of employment will be the 3rd November, followed by a week of me relaxing, and then it's back into it again."},{"title":"A streamlined approach to Laravel validation","category":"guides","link":"https:\/\/ollieread.com\/archive\/read\/a-streamlined-approach-to-laravel-validation","snippet":"It has been while (almost two years) since I wrote an article here and I've decided to make my triumphant return with an article I never managed to get around to writing.\nAs the title may suggest, this article is about streamlining validation with Laravel. While the final aim is to explain and present you with a quick and simple abstracted validator that requires minimal code in the actual implementation stage, before we get there I will need to cover the usual methods of validation which are default validation, form request validation and model validation. So let's start."}]